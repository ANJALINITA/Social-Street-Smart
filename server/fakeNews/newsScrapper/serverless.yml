service: fakeNewsScrapper

frameworkVersion: ">=1.1.0 <2.0.0"

provider:
  name: aws
  runtime: python3.6
  environment:
    DYNAMODB_TABLE: serverless-rest-api-with-dynamodb-dev
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-east-1:785964984447:table/serverless-rest-api-with-dynamodb-dev"

custom:
  pythonRequirements:
    packRequirements: true
    dockerizePip: non-linux
    slim: true
    # layer: true
    # noDeploy:
    #   - boto3
    #   - botocore
    #   - docutils
    #   - jmespath
    #   - pip
    #   - python-dateutil
    #   - s3transfer
    #   - setuptools
    #   - six
    #   - tensorboard
    #   - pytest
    #   - tensorflow
    #   - tqdm
    #   - zappa
    #   - pytest
    #   - scipy
    #   - Keras


functions:
  create:
    handler: todos/create.create
    timeout: 600
    

  list:
    handler: todos/list.list
    events:
      - http:
          path: fakenews/show
          method: get
          cors: true
  getNews:  
    handler: todos/getNews.getNews
    events:
      - http:
          path: fakenews/getNews/{url}
          method: get
          cors: true
  # get:
  #   handler: todos/get.get
  #   events:
  #     - http:
  #         path: todos/{id}
  #         method: get
  #         cors: true

  # update:
  #   handler: todos/update.update
  #   events:
  #     - http:
  #         path: todos/{id}
  #         method: put
  #         cors: true

  # delete:
  #   handler: todos/delete.delete
  #   events:
  #     - http:
  #         path: todos/{id}
  #         method: delete
  #         cors: true

resources:
  # Resources:
  #   TodosDynamoDbTable:
  #     Type: 'AWS::DynamoDB::Table'
  #     DeletionPolicy: Retain
  #     Properties:
  #       AttributeDefinitions:
  #         -
  #           AttributeName: id
  #           AttributeType: S
  #       KeySchema:
  #         -
  #           AttributeName: id
  #           KeyType: HASH
  #       ProvisionedThroughput:
  #         ReadCapacityUnits: 1
  #         WriteCapacityUnits: 1
  #       TableName: ${self:provider.environment.DYNAMODB_TABLE}

plugins:
  - serverless-python-requirements
